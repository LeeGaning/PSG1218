name: Build_PSG1218

on: 
  workflow_dispatch:
    inputs:
      firmwarever:
        description: 'firmware''s version'
        required: true
        default: '20231213'
      busyboxver:
        type: choice
        description: 'busybox''s version'
        options:
        - 1.24.x
        default: '1.24.x'
      ssp:
        type: boolean
        description: 'whether to apply the patch for download ssp bin from local or remote url'
        default: 'false'
      uploadwet:
        type: boolean
        description: 'whether to upload firmware to wetransfer'
        default: 'true'
      pushplus:
        type: boolean
        description: 'whether to notify through pushplus'
        default: 'false'
env:
  REPOSITORY_URL: https://github.com/LeeGaning/PSG1218.git
  TOOLCHAIN_URL: https://github.com/hanwckf/padavan-toolchain/releases/download/v1.1/mipsel-linux-uclibc.tar.xz
  WORK_PATH: /opt/rt-n56u
  TIME_ZONE: Asia/Shanghai
  TARGET_NAME: PSG1218
  FIRMWARE_DATEPREFIX: $(date +"%Y%m%d")
  FIRMWARE_AUTHOR: Ganing
  FIRMWARE_PATH: /opt/firmwares
jobs:
  build:
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@main
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt-get update
        sudo apt-get -y install unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fakeroot kmod \
        cpio git python-docutils gettext automake autopoint texinfo build-essential help2man \
        pkg-config zlib1g-dev libgmp3-dev libmpc-dev libmpfr-dev libncurses5-dev libltdl-dev wget libc-dev-bin
        sudo timedatectl set-timezone "$TIME_ZONE"
    - name: Clone source code
      run: |
        git clone --depth=1 $REPOSITORY_URL $WORK_PATH
        cd $WORK_PATH/toolchain-mipsel
        mkdir -p toolchain-3.4.x
        wget $TOOLCHAIN_URL
        tar -xvf mipsel-linux-uclibc.tar.xz -C toolchain-3.4.x
    - name: Set busybox's version to compile
      run: |
        cd $WORK_PATH/trunk/user/busybox
        sed -i "s/SRC_NAME=busybox.*/SRC_NAME=busybox-${{ github.event.inputs.busyboxver }}/g" ./Makefile
        cd $WORK_PATH/trunk
        sed -i "s/busybox_id=.*/busybox_id=\"${{ github.event.inputs.busyboxver }}\"/g" ./build_firmware_modify
    - name: Custom config
      run: |
        cd $WORK_PATH/trunk
        if [ ! -f ../$TARGET_NAME.config ] ; then
          echo "../${TARGET_NAME}.config not found"
          exit 1
        fi
        cp -f ../$TARGET_NAME.config .config
        
        #########################################################################################
        #自定义添加其它功能请参考源码configs/templates/目录下的config文件。按照上面的格式添加即可
        #格式如下：
        #sed -i '/自定义项/d' .config
        #echo "自定义项=y" >> .config
        sed -i "s/FIRMWARE_BUILDS_REV=.*/FIRMWARE_BUILDS_REV=${{ github.event.inputs.firmwarever }}/g" ./versions.inc
        echo '更新版本号时间'
        #########################################################################################
    - name: Build firmware
      run: |
        cd $WORK_PATH/trunk
        sudo ./clear_tree
        sudo ./build_firmware_modify $TARGET_NAME 0
        echo "FIRMWARE_DATEPREFIX=$(date +"%Y%m%d")" >> $GITHUB_ENV
    - name: Organize firmware files
      id: organize
      run: |
        mkdir -p $FIRMWARE_PATH/
        cd $WORK_PATH/trunk/images
        for firmwarefile in $(ls *.trx)
          do sudo mv $firmwarefile $FIRMWARE_PATH/${FIRMWARE_DATEPREFIX}"_"${FIRMWARE_AUTHOR}"_"$firmwarefile
        done
        cd $FIRMWARE_PATH
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "STATUS=success" >> $GITHUB_ENV
    - name : Upload packages
      uses: actions/upload-artifact@main
      if: env.STATUS == 'success'
      with:
        name: Padavan-packages
        path: ${{ env.FIRMWARE }}
    - name: Upload firmware to WeTransfer
      if: env.STATUS == 'success' && github.event.inputs.uploadwet == 'true'
      run: |
        curl -fsSL git.io/file-transfer | sh
        ./transfer wet -s -p 16 --no-progress ${FIRMWARE} 2>&1 | tee wetransfer.log
        echo "::warning file=wetransfer.com::$(cat wetransfer.log | grep -o -E "https?://[a-zA-Z0-9\.\/_&=@$%?~#-]*")"
        echo "WETRANSFER_URL=$(cat wetransfer.log | grep -o -E "https?://[a-zA-Z0-9\.\/_&=@$%?~#-]*")" >> $GITHUB_ENV
    - name: Remove obsolete firmwares on artifacts
      uses: c-hive/gha-remove-artifacts@v1.2.0
      if: env.STATUS == 'success'
      with:
        age: '1 day'
        skip-recent: 5
    